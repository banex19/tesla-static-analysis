#!/bin/bash

usage() {
	echo "Usage:  tesla <tool> [tool arguments]"
	echo
	echo "  where <tool> is one of:"
	echo "    - analyse       (analyse C assertions, produce TESLA IR)"
	echo "    - cat           (combine several TESLA IR files)"
	echo "    - get-triple    (get the host's LLVM triple)"
	echo "    - highlight     (show transitions taken in a .dot graph)"
	echo "    - instrument    (add TESLA instrumention to LLVM IR)"
	echo "    - print         (print information about TESLA automata)"
        echo "    - static        (statically analyse TESLA assertions)"
	echo
}

best_opt() {
  brew=$(command -v brew)
  ret=$?
  if [[ $ret -eq 0 ]]; then
    $($brew --prefix llvm)/bin/opt "$@"
  else
    opt "$@"
  fi
}

if [ ! $1 ]; then
	usage
	exit 1
fi

BASE_DIR=`dirname "$0"`

TOOL_NAME="tesla-$1"
shift

#Â The instrumenter and static analysis tool are now implemented as opt passes,
# so instead of calling them as a tool, we pass some arguments through to opt
# tesla-static doesn't modify the IR file that it's given, but it still wants to
# produce some output, so we silence it by redirecting to /dev/null.
if [ "$TOOL_NAME" = "tesla-instrument" ] || [ "$TOOL_NAME" = "tesla-static" ]; then
  LIB_EXT="so"

  if [[ "$OSTYPE" == "darwin"* ]]; then
    LIB_EXT="dylib"
  fi

  LIB_NAME="LLVMTesla.$LIB_EXT"

  if [[ "$TESLA_BUILD_DIR" ]]; then
    LIB=`find $TESLA_BUILD_DIR/tesla -name $LIB_NAME`
  else
    LIB="$LIB_NAME"
  fi

  if [ "$TOOL_NAME" = "tesla-static" ]; then
    best_opt -load "$BASE_DIR/$LIB" "-$TOOL_NAME" "$@" > /dev/null
  else
    best_opt -load "$BASE_DIR/$LIB" "-$TOOL_NAME" "$@"
  fi

  exit $?
fi

#
# TESLA_BUILD_DIR takes precedence, otherwise try to find beside wrapper
#
if [ $TESLA_BUILD_DIR ]; then
	TOOL=`find $TESLA_BUILD_DIR/tesla -name $TOOL_NAME`
	if [ ! "$TOOL" ]; then
		echo "No '$TOOL_NAME' in TESLA_BUILD_DIR ('$TESLA_BUILD_DIR')."
		exit 1
	fi
else
	TOOL="$(dirname $(which $0))/${TOOL_NAME}"
	# echo $TOOL
	if [ ! -e "${TOOL}" ]; then
		TOOL=
	fi
fi

#
# Last ditch effort to find in PATH
#
if [ -z "$TOOL" ]; then
	TOOL=`which $TOOL_NAME`
	if [ ! "$TOOL" ]; then
		echo "No '$TOOL_NAME' in \$PATH; try setting TESLA_BUILD_DIR?"
		exit 1
	fi
fi

$TOOL "$@"
ret=$?
if [ $ret -ne 0 ] ; then
	echo Invocation was $TOOL "$@"
	exit $ret
fi
